// <auto-generated />
using System;
using App1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App1.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("App1.Models.Cliente", b =>
                {
                    b.Property<string>("Email_Cliente")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("ClienteEmail_Cliente")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id_Cliente")
                        .HasColumnType("int");

                    b.Property<string>("Nome_Cliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Email_Cliente");

                    b.HasIndex("ClienteEmail_Cliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("App1.Models.Comprar", b =>
                {
                    b.Property<int>("Id_Compra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Compra"), 1L, 1);

                    b.Property<DateTime>("Data_Compra")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email_Cliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FormaPagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Destino")
                        .HasColumnType("int");

                    b.HasKey("Id_Compra");

                    b.HasIndex("Email_Cliente");

                    b.HasIndex("Id_Destino");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("App1.Models.Contato", b =>
                {
                    b.Property<int>("Id_Contato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Contato"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Contato");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("App1.Models.Destino", b =>
                {
                    b.Property<int>("Id_Destino")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Destino"), 1L, 1);

                    b.Property<int?>("DestinoId_Destino")
                        .HasColumnType("int");

                    b.Property<DateTime>("Hora_Voo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome_Destino")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Preco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Destino");

                    b.HasIndex("DestinoId_Destino");

                    b.ToTable("Destino");
                });

            modelBuilder.Entity("App1.Models.Cliente", b =>
                {
                    b.HasOne("App1.Models.Cliente", null)
                        .WithMany("Clientes")
                        .HasForeignKey("ClienteEmail_Cliente");
                });

            modelBuilder.Entity("App1.Models.Comprar", b =>
                {
                    b.HasOne("App1.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("Email_Cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App1.Models.Destino", "Destino")
                        .WithMany()
                        .HasForeignKey("Id_Destino")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Destino");
                });

            modelBuilder.Entity("App1.Models.Destino", b =>
                {
                    b.HasOne("App1.Models.Destino", null)
                        .WithMany("Destinos")
                        .HasForeignKey("DestinoId_Destino");
                });

            modelBuilder.Entity("App1.Models.Cliente", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("App1.Models.Destino", b =>
                {
                    b.Navigation("Destinos");
                });
#pragma warning restore 612, 618
        }
    }
}
